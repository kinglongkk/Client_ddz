{"version":3,"sources":["ddz_SceneLaunch.js"],"names":["app","require","cc","Class","extends","Component","properties","onLoad","State_InitClient","State_ShowHealthForm","State_StartUpDate","State_LoadJSFile","State_WaitJSFileLoad","State_EndUpDate","State_SendGateHttp","State_LoadText","State_LoadRes","State_StartGame","State_RunGame","State_StartUpNextDate","State_LoadResFail","State_ClientOutOfDate","initState","allTableDataDict","clientConfig","Client","subGameName","OnInitClientData","InitTable","LoadFirstConfig","sys","localStorage","setItem","GetMsg","argList","logText","js","formatStr","apply","Log","log","SysLog","ErrLog","error","isNative","localConfig","getItem","JSON","parse","that","ddz_ControlManager","CreateLoadPromise","then","textData","OnLoadFirstConfig","catch","stack","textDataList","text","split","count","length","index","dataString","replace","startsWith","dataList","keyName","shift","value","join","endsWith","gateServerIP","dbGateServerInfo","LocalDataManager","GetConfigProperty","MultiPoint","gateServerPort","ListChoice","gateServerUrl","gateSendPack","SendHttpRequest","stringify","targetList","Math","floor","random","serverUrl","argString","requestType","sendPack","url","dataStr","timeOut","httpRequest","XMLHttpRequest","timeout","open","setRequestHeader","onerror","OnConnectHttpFail","readyState","status","ontimeout","UseLocalConfig","onreadystatechange","OnReceiveHttpPack","responseText","send","httpResText","serverPack","errorNode","active","serverIP","GetClientConfigProperty","AccessPoint","AccountActive","myCityID","CityPoints","CityPointsList","indexOf","AllTableDict","AllTableNameList","Object","keys","PerTimeTableCount","loadTableCount","OnLoadTable","allCount","tableName","pop","keyNameList","tablePath","RawAsset","update","dt","OnInitClientFinish","LoadLogin","ReloadInitModel","accountID","ddz_NetManager","InitConnectAccountID","InitConnectServer","needInitModel","i","GetModel","Init"],"mappings":"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","file":"ddz_SceneLaunch.js","sourceRoot":"../../../../../assets/script/scene","sourcesContent":["/*\r\n    客户端启动场景，不受场景管理\r\n*/\r\n\r\nvar app = require(\"ddz_app\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n    },\r\n\r\n    //加载\r\n    onLoad: function () {\r\n        //节点更新回默认节点\r\n        //app.LocalDataManager().SetConfigProperty(\"Account\", \"AccessPoint\",0);\r\n        //客户端启动初始状态\r\n        this.State_InitClient = 0;\r\n        //显示健康提示语\r\n        this.State_ShowHealthForm = 1;\r\n        //客户端更新资源状态\r\n        this.State_StartUpDate = 2;\r\n        //加载js文件\r\n        this.State_LoadJSFile = 3;\r\n        //等待js文件加载完成回调\r\n        this.State_WaitJSFileLoad = 4;\r\n        //更新完成状态\r\n        this.State_EndUpDate = 5;\r\n        //发送请求gateserver下载配置\r\n        this.State_SendGateHttp = 6;\r\n        //加载txt配置\r\n        this.State_LoadText = 7;\r\n        this.State_LoadRes = 8;\r\n        //进入游戏状态\r\n        this.State_StartGame = 9;\r\n        //已经在运行游戏状态\r\n        this.State_RunGame = 10;\r\n        //需要更新下一个资源中\r\n        this.State_StartUpNextDate = 11;\r\n        //下载资源失败\r\n        this.State_LoadResFail = 12;\r\n        //客户端过期\r\n        this.State_ClientOutOfDate = 13;\r\n        //初始化状态\r\n        this.initState = this.State_InitClient;\r\n\r\n        //所有表数据字典\r\n        this.allTableDataDict = {};\r\n\r\n        //下载的客户端配置\r\n        this.clientConfig = {};\r\n\r\n        //从全局空间获取客户端ClientManager\r\n        this.Client = app[app.subGameName + \"Client\"];\r\n        this.Client.OnInitClientData(\"\", 1);\r\n        this.InitTable();\r\n        this.LoadFirstConfig();\r\n\r\n        cc.sys.localStorage.setItem(\"curRunGame\", app.subGameName);\r\n    },\r\n\r\n\r\n    GetMsg:function(argList){\r\n        let logText = cc.js.formatStr.apply(null, argList);\r\n        return \"SceneLaunch\" + \"\\t\" + logText;\r\n    },\r\n\r\n    Log:function(...argList){\r\n        cc.log(this.GetMsg(argList));\r\n    },\r\n\r\n    SysLog:function(...argList){\r\n        cc.log(this.GetMsg(argList));\r\n    },\r\n\r\n    ErrLog:function(...argList){\r\n        cc.error(this.GetMsg(argList));\r\n    },\r\n    \r\n    //初始化加载debug文件\r\n    LoadFirstConfig:function(){\r\n        if (cc.sys.isNative) {\r\n            //线上的直接读取大厅的本地保存\r\n            this.localConfig = cc.sys.localStorage.getItem(\"localConfig\");\r\n            this.clientConfig = JSON.parse(this.localConfig);\r\n            this.initState = this.State_LoadText;\r\n        }else{\r\n            let that = this;\r\n            this.Client.ddz_ControlManager.CreateLoadPromise(\"firstConfig\")\r\n                .then(function(textData){\r\n\r\n                    if(!that.OnLoadFirstConfig(textData)){\r\n                        that.ErrLog(\"OnLoadFirstConfig(%s) fail\", textData);\r\n                        that.initState = that.State_LoadResFail;\r\n                    }\r\n                })\r\n                .catch (function(error){\r\n                    that.ErrLog(\"OnLoadFirstConfig:%s error\", error.stack);\r\n                    that.initState = that.State_LoadResFail;\r\n                })\r\n        }\r\n    },\r\n\r\n    //解析配置\r\n    OnLoadFirstConfig:function(textData){\r\n        this.localConfig = {};\r\n        try{\r\n            let textDataList = textData.text.split(\"\\n\");\r\n            let count = textDataList.length;\r\n            for(let index=0; index<count; index++){\r\n                //去除空格\r\n                let dataString = textDataList[index].replace(/(\\s*$)/g, \"\");\r\n                if(!dataString){\r\n                    continue\r\n                }\r\n                if(dataString.startsWith(\"#\")){\r\n                    continue\r\n                }\r\n                let dataList = dataString.split(\"=\");\r\n                if(dataList.length < 2){\r\n                    this.ErrLog(\"OnLoadFirstConfig dataString:%s error\", dataString);\r\n                    continue\r\n                }\r\n                let keyName = dataList.shift().replace(/(\\s*$)/g, \"\");\r\n\r\n                //有可能是多个等于号,后续的分割列表合并成一个做为value\r\n                let value = \"\";\r\n                if(dataList.length != 1){\r\n                    value = dataList.join(\"=\");\r\n                }\r\n                else{\r\n                    value = dataList[0];\r\n                }\r\n                value = value.replace(/(\\s*$)/g, \"\");\r\n                //如果是List或者Dict\r\n                if(keyName.endsWith(\"List\") || keyName.endsWith(\"Dict\")){\r\n                    value = JSON.parse(value);\r\n                }\r\n                this.localConfig[keyName] = value;\r\n            }\r\n        }\r\n        catch (error){\r\n            this.ErrLog(\"OnLoadFirstConfig(%s) error:%s\", textData, error.stack);\r\n            return false\r\n        }\r\n\r\n        let gateServerIP = 0;\r\n        let dbGateServerInfo = app.LocalDataManager().GetConfigProperty(\"DebugInfo\", \"GateServerInfo\");\r\n        //优先使用本地数据库缓存\r\n        if(dbGateServerInfo && dbGateServerInfo[\"GateServerIP\"]){\r\n            gateServerIP = dbGateServerInfo[\"GateServerIP\"];\r\n        }\r\n        else{\r\n            gateServerIP = this.localConfig[\"GateServerIP\"];\r\n            gateServerIP=this.MultiPoint(gateServerIP);\r\n        }\r\n\r\n        //如果没有配置IP,使用本地配置\r\n        if(gateServerIP){\r\n            let gateServerPort = 0;\r\n            //优先使用本地数据库缓存\r\n            if(dbGateServerInfo && dbGateServerInfo[\"GateServerPort\"]){\r\n                gateServerPort = dbGateServerInfo[\"GateServerPort\"];\r\n            }\r\n            else{\r\n                gateServerPort = this.ListChoice(this.localConfig[\"GateServerPortList\"]);\r\n            }\r\n            if(!gateServerPort){\r\n                this.ErrLog(\"localConfig and dbGateServerInfo not find gateServerPort:\", this.localConfig, dbGateServerInfo);\r\n                return false\r\n            }\r\n            this.gateServerUrl = [\"http://\", gateServerIP, \":\", gateServerPort, \"/ClientPack\"].join(\"\");\r\n            //存放到app作用域\r\n            app[\"GateServerInfo\"] = {\"GateServerIP\":gateServerIP, \"GateServerPort\":gateServerPort};\r\n\r\n            this.gateSendPack = {\r\n                                    \"Head\":0xFF10,\r\n                                    \"GameID\":this.localConfig[\"GameID\"],\r\n                                    \"ConfigVersion\":this.localConfig[\"ConfigVersion\"],\r\n                                };\r\n            //开始请求客户端配置\r\n            this.initState = this.State_SendGateHttp;\r\n            this.SendHttpRequest(this.gateServerUrl, \"?Sign=ddcat\", \"POST\", this.gateSendPack);\r\n        }\r\n        //不需要下载远程配置,使用本地配置\r\n        else{\r\n            app[\"GateServerInfo\"] = {\"GateServerIP\":\"0.0.0.0\", \"GateServerPort\":0};\r\n            this.initState = this.State_LoadText;\r\n            this.clientConfig = JSON.parse(JSON.stringify(this.localConfig));\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    //列表随机\r\n    ListChoice:function(targetList){\r\n        var length = targetList.length;\r\n        if(length < 1){\r\n            return null;\r\n        }\r\n        return targetList[Math.floor(Math.random()*(length))];\r\n    },\r\n\r\n    /**\r\n     * 发送HTTP请求\r\n     * * @param requestType POST or GET\r\n     */\r\n    SendHttpRequest:function(serverUrl, argString, requestType, sendPack){\r\n\r\n        var url = [serverUrl, argString].join(\"\")\r\n\r\n        var dataStr = JSON.stringify(sendPack);\r\n        let timeOut=false;\r\n        //每次都实例化一个，否则会引起请求结束，实例被释放了\r\n        var httpRequest = new XMLHttpRequest();\r\n\r\n        httpRequest.timeout = 3000;\r\n\r\n\r\n        httpRequest.open(requestType, url, true);\r\n        //服务器json解码\r\n        httpRequest.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n        var that = this;\r\n        httpRequest.onerror = function(){\r\n            that.ErrLog(\"httpRequest.error:%s\", url);\r\n            that.OnConnectHttpFail(serverUrl, httpRequest.readyState, httpRequest.status);\r\n        };\r\n        httpRequest.ontimeout = function(){\r\n            timeOut=true;\r\n            that.UseLocalConfig();\r\n        };\r\n        httpRequest.onreadystatechange = function(){\r\n            if(timeOut==true){\r\n                return;\r\n            }\r\n            //执行成功\r\n            if (httpRequest.status == 200){\r\n                if(httpRequest.readyState == 4){\r\n                    that.OnReceiveHttpPack(serverUrl, httpRequest.responseText);\r\n                }\r\n            }\r\n            else{\r\n                that.OnConnectHttpFail(serverUrl, httpRequest.readyState, httpRequest.status);\r\n                that.ErrLog(\"onreadystatechange(%s,%s)\", httpRequest.readyState, httpRequest.status);\r\n            }\r\n        };\r\n        httpRequest.send(dataStr);\r\n\r\n    },\r\n\r\n    //HTTP请求失败\r\n    OnConnectHttpFail:function(serverUrl, readyState, status){\r\n        this.UseLocalConfig();    \r\n    },\r\n    UseLocalConfig:function(){\r\n        app[\"GateServerInfo\"] = {\"GateServerIP\":\"0.0.0.0\", \"GateServerPort\":0};\r\n        this.initState = this.State_LoadText;\r\n        this.clientConfig = JSON.parse(JSON.stringify(this.localConfig));\r\n    },\r\n\r\n    //http请求回复\r\n    OnReceiveHttpPack:function(serverUrl, httpResText){\r\n        try{\r\n            let serverPack = JSON.parse(httpResText);\r\n\r\n            if(serverPack[\"IsSuccess\"] == 1){\r\n                this.clientConfig = serverPack[\"ClientConfig\"];\r\n                //追加本地标示\r\n                this.clientConfig[\"GameID\"] = this.localConfig[\"GameID\"];\r\n                this.clientConfig[\"ConfigVersion\"] = this.localConfig[\"ConfigVersion\"];\r\n\r\n                this.initState = this.State_LoadText;\r\n            }\r\n            else{\r\n                this.clientConfig = {};\r\n                this.initState = this.State_LoadResFail;\r\n                this.ErrLog(\"LoadClientConfig fail\");\r\n\r\n                this.errorNode.active = 1;\r\n            }\r\n        }\r\n        catch (error){\r\n            this.ErrLog(\"OnReceiveHttpPack:%s\", error.stack);\r\n            this.initState = this.State_LoadResFail;\r\n            this.clientConfig = {};\r\n        }\r\n    },\r\n\r\n    MultiPoint:function(serverIP){\r\n        if(serverIP==\"\"){\r\n            return \"\";\r\n        }\r\n        if(app[app.subGameName + \"Client\"].GetClientConfigProperty(\"IsGaoFang\")==0){\r\n            //不接入高防\r\n            return serverIP;\r\n        }\r\n        let AccessPoint=app.LocalDataManager().GetConfigProperty(\"Account\", \"AccessPoint\");\r\n        if(AccessPoint>0){\r\n            if(AccessPoint==1){\r\n                return 'line1.'+serverIP;\r\n            }else if(AccessPoint==2){\r\n                return 'line2.'+serverIP;\r\n            }else if(AccessPoint==3){\r\n                return 'line3.'+serverIP;\r\n            }\r\n        }\r\n\r\n        let AccountActive = app.LocalDataManager().GetConfigProperty(\"Account\", \"AccountActive\");\r\n        //如果该城市有独立节点，则调用本城市自己的节点\r\n        let myCityID = cc.sys.localStorage.getItem(\"myCityID\");\r\n        if(myCityID){\r\n            let CityPoints=app[app.subGameName + \"Client\"].GetClientConfigProperty(\"CityPoints\");\r\n            if(CityPoints){\r\n                let CityPointsList=CityPoints.split(',');\r\n                if(CityPointsList.indexOf(myCityID)>-1){\r\n                    //用户选择的城市有配置独立的节点\r\n                    if(AccountActive>10){\r\n                        return 'h'+myCityID+'.'+serverIP; //活跃用户\r\n                    }else{\r\n                        return 'c'+myCityID+'.'+serverIP; //普通用户\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(AccountActive>100){\r\n            serverIP='a100.'+serverIP;\r\n        }else if(AccountActive>50){\r\n            serverIP='i50.'+serverIP;\r\n        }else if(AccountActive>10){\r\n            serverIP='x10.'+serverIP;\r\n        }\r\n\r\n\r\n        return serverIP;\r\n    },\r\n\r\n    //初始化表数据\r\n    InitTable:function(){\r\n        this.AllTableDict = {\r\n            \"gameCreate\":null,\r\n            \"gameList\":null,\r\n            \"GameHelp\":null,\r\n            \"IntegrateImage\":null,\r\n            \"practice\":null,\r\n            \"roomcost\":null,\r\n            \"SceneInfo\":null,\r\n            \"trusteeshipTime\":null,\r\n            \"Effect\":null,\r\n            \"Sound\":null,\r\n            \"Gift\":null,\r\n            \"NewSysMsg\":null,\r\n        };\r\n        this.AllTableNameList = Object.keys(this.AllTableDict);\r\n        \r\n        //每次加载几张配置表\r\n        this.PerTimeTableCount = 2;\r\n        this.loadTableCount = 0;\r\n    },\r\n\r\n    //加载表数据回掉\r\n    OnLoadTable:function(){\r\n\r\n        let that = this;\r\n        let allCount = Object.keys(this.AllTableDict).length;\r\n        \r\n        //加载完所有表格\r\n        if(this.loadTableCount >= allCount){\r\n            this.initState = this.State_StartGame;\r\n        }\r\n\r\n        for(let index = 0; index < this.PerTimeTableCount; index++){\r\n\r\n            let tableName = this.AllTableNameList.pop();\r\n            //已经发送所有表请求\r\n            if(!tableName){\r\n                break\r\n            } \r\n            let keyNameList = this.AllTableDict[tableName];\r\n            let tablePath = 'jsonData/' + tableName;\r\n\r\n            this.Client.ddz_ControlManager.CreateLoadPromise(tablePath, cc.RawAsset)\r\n                                    .then(function(textData){\r\n                                        that.loadTableCount += 1;\r\n                                        that.allTableDataDict[tableName] = {\"Data\":textData, \"KeyNameList\":keyNameList};\r\n                                    })\r\n                                    .catch(function(error){\r\n                                        that.ErrLog(\"tablePath(%s) error:%s\", tablePath, error.stack);\r\n                                        that.initState = that.State_LoadResFail;\r\n                                    })\r\n        }\r\n    },\r\n\r\n    //每帧回掉\r\n    update: function (dt) {\r\n        //没有初始化客户端实例\r\n        if(!this.Client){\r\n            return\r\n        }\r\n\r\n        switch (this.initState){\r\n            case this.State_LoadText:\r\n                this.OnLoadTable();\r\n                break\r\n            \r\n            case this.State_StartGame:\r\n                this.initState = this.State_RunGame;\r\n                this.Client.OnInitClientFinish(this.allTableDataDict, this.clientConfig);\r\n                if (!cc.sys.isNative){\r\n                    //不是真机，直接调用登录\r\n                    this.Client.LoadLogin();\r\n                    return;\r\n                }else{\r\n                    this.ReloadInitModel();\r\n                    let accountID = app.LocalDataManager().GetConfigProperty(\"Account\", \"AccountID\");\r\n                    app.ddz_NetManager().InitConnectAccountID(accountID);\r\n                    app.ddz_NetManager().InitConnectServer();\r\n                }\r\n                break\r\n            case this.State_RunGame:\r\n                \r\n                break\r\n            default:\r\n                break\r\n        }\r\n    },\r\n\r\n    //重新载入需要重新初始化脚本\r\n    ReloadInitModel:function(){\r\n        if (!cc.sys.isNative) return;\r\n        let needInitModel = [\r\n                                // \"SysNotifyManager\",\r\n                                // \"WeChatManager\",\r\n                                // //资源模块\r\n                                // // \"SceneManager\",\r\n                                // \"EffectManager\",\r\n                                // \"SoundManager\",\r\n                                app.subGameName + \"_SceneManager\",\r\n                                app.subGameName + \"_AudioManager\",\r\n                                //数据管理器\r\n                                app.subGameName + \"_HeroAccountManager\",\r\n                                // \"GameManager\",\r\n                                // //-----战斗相关-------\r\n                                // \"PlayerRoomManager\",\r\n                            ];\r\n\r\n        for (var i = 0; i < needInitModel.length; i++) {\r\n            require(needInitModel[i]).GetModel().Init();\r\n        }\r\n    },\r\n});\r\n"]}